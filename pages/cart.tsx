import Head from "next/head";
import { WalletSection } from "../components";
import Link from "next/link";
import Image from "next/image";
import { useState, useEffect } from "react";
import ReactLoading from "react-loading";
import { toast } from "react-toastify";
import { storefront } from "../utils/storefront";
import productHelper from "../utils/productHelper";
import { useSigningClient } from "../contexts/cosmwasm";

export default function Cart() {
  const [shirt, setShirt] = useState(null);
  const [selectedSize, setSelectedSize] = useState('');
  const [shopifyCartURL, setShopifyCartURL] = useState(null);
  const { address }: any = useSigningClient();

  const getUser = () => {
    let savedUser = sessionStorage.getItem("user");
    if (savedUser) {
      return JSON.parse(atob(atob(savedUser)));
    }
    return null;
  }

  const getShirt = async () => {
    const { body } = await storefront();
    const mappedProducts = body
      ? (body as any).products.edges.map((p) => {
        return productHelper.map(p.node);
      })
      : [];
    const sku = "shirtdrop";
    const shirt = productHelper.getBySKU(sku, mappedProducts);
    setShirt(shirt[0]);

    const user = getUser();
    if (user && address && user?.address === address) {
      setSelectedSize(user?.size);
    }
  };

  const getShopify = async () => {
    try {
      let response = await sendToShopify();
      response = await response.json();
      if (response['errors']) {
        toast.error(response['errors'][0].message);
      } else {
        setShopifyCartURL(response['data'].checkoutCreate.checkout.webUrl);
      }
      sessionStorage.removeItem("user");
    } catch (err) {
      console.log(err);
      toast.error("Failed to fetch");
    }
  }

  const sendToShopify = async () => {
    const items = [];
    const variants = shirt?.variants;
    for (let i = 0; i < variants.length; i++) {
      const variant = variants[i];
      if (variant.title === selectedSize) {
        items.push(`{ variantId: "${variant.id.replace(/\//g, "\\/")}", quantity: 1 }`)
      }
    }
    const lineItems = items.join(",");
    const gql = String.raw;
    const query = gql`
			mutation {
				checkoutCreate(input: {
					allowPartialAddresses: true,
					lineItems: [ ${lineItems} ]
				}) {
					checkout {
						id
						webUrl
					}
				}
			}
		`;

    try {
      const variables = {};
      const API_URL = process.env.NEXT_PUBLIC_SHOPIFY_API_URL + "api/2023-04/graphql.json";
      const response = await fetch(API_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Shopify-Storefront-Access-Token': process.env.NEXT_PUBLIC_SHOPIFY_ACCESS_TOKEN
        },
        body: JSON.stringify({ query, variables })
      });
      return response;
    } catch (error) {
      console.log(error);
    }
  }

  useEffect(() => {
    getShirt();
  }, [address]);

  useEffect(() => {
    if (shirt && selectedSize) {
      getShopify();
    }
  }, [shirt, selectedSize])

  return (
    <div className="w-full max-w-6xl mx-auto px-4 pt-10 min-h-[100vh] flex flex-col justify-between">
      <Head>
        <title>Suitdrop | Redeem</title>
        <meta name="description" content="Generated by create cosmos app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="true"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400&display=swap"
          rel="stylesheet"
        />
      </Head>
      <div className="flex flex-row justify-end items-center mb-2 gap-5">
        <Link
          className="inline-flex items-center justify-center w-12 h-12 text-black border rounded-lg dark:text-white hover:bg-black/10 dark:hover:bg-white/10 border-black/10 dark:border-white/10 mr-2"
          href="/redeem"
        >
          <div className="hover:underline hover:underline-offset-1 text-[#e0e0e0] hover:text-white mr-2 text-lg cursor-pointer">
            Redeem
          </div>
        </Link>
        <WalletSection />
      </div>
      <div className="text-center">
        <h1 className="text-2xl font-bold sm:text-3xl md:text-3xl">
          MY CART
        </h1>
      </div>

      <div className="container flex flex-col md:flex-row w-full mt-10 mx-auto">
        <div className="w-full md:w-1/2 flex justify-center text-center">
          {shirt ? (
            <Image
              src={shirt.image.src}
              height={shirt.image.height}
              width={shirt.image.width}
              alt={shirt.title}
            />
          ) : (
            <div className="flex flex-col gap-4 justify-center items-center h-full min-h-[500px]">
              <ReactLoading type="spin" color="#fff" />
              <span className="text-white text-lg">Loading...</span>
            </div>
          )}
        </div>
        <div className="w-full md:w-1/2 flex flex-col justify-evenly">
          <div className="flex flex-col">
            <div className="flex w-full text-center justify-center text-2xl">
              SELECTED SIZE:
            </div>
            <div className="mt-5 flex w-full text-center text-2xl text-gray-400 justify-evenly">
              <span className={"p-1 text-lg m-0 rounded-lg bg-[#e00036] text-white w-[70px]"}>{selectedSize}</span>
            </div>
          </div>

          <div className="container flex flex-col w-full mt-10 mb-5">
            {shopifyCartURL ?
              <a href={shopifyCartURL} target="_blank" className={'mt-5 w-full bg-[#e00036] hover:bg-[#ad062e] transition p-2.5 rounded-md text-xl'} rel="noreferrer">
                <div>
                  <p>CLICK HERE TO FINALIZE YOUR ORDER IN SHOPIFY</p>
                  <p><i>Ignore the $USD prices you see there - you&apos;ve already paid in $SHIRT</i></p>
                </div>
              </a> : null}
          </div>
        </div>
      </div>

      <div className="flex justify-center  text-sm text-center bg-transparent mt-5 mb-2 relative min-h-[80px]">
        <a href="https://artlink.network/" className="absolute bottom-0 right-2 flex gap-2 items-center" target="_blank" rel="noreferrer">
          <span className="text-white text-lg">Powered by</span>
          <Image src="/artlink.png" width={100} height={18} layout="fixed" />
        </a>
      </div>
    </div>
  );
}
